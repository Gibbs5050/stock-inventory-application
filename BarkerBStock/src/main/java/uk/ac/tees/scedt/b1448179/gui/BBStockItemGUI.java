/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uk.ac.tees.scedt.b1448179.gui;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import uk.ac.tees.scedt.b1448179.console.BBStockItem;
import uk.ac.tees.scedt.b1448179.console.MeadMAdapter;
import uk.ac.tees.scedt.b1448179.console.BB_Buying;
import uk.ac.tees.scedt.b1448179.console.BB_Stores;

/**
 *
 * @author b1448179
 */
public class BBStockItemGUI extends javax.swing.JFrame {

    //lists stock items
    List<BBStockItem> items;
    List<BB_Stores> newInfo;

    /**
     * Creates new form BBStockItemGUI
     */
    public BBStockItemGUI() {
        initComponents();
        init();
    }

    public void init() {
        //create an object of a table
        items = BBStockItem.importCSV();
        newInfo = BB_Stores.loadSalesInfoCSV();

        items = MeadMAdapter.getAdaptedList(items);
        BBStockItemTableModel tableModel = new BBStockItemTableModel(items);
        SalesTransactionsTableModel SalesInfoTableModel = new SalesTransactionsTableModel(newInfo);
        salesInfoTable.setModel(SalesInfoTableModel);

        itemsTable.setModel(tableModel);
        salesInfoTable.setModel(SalesInfoTableModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        buyButton = new javax.swing.JButton();
        sellButton = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesInfoTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        itemsTable.setBackground(new java.awt.Color(204, 255, 204));
        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(itemsTable);

        buyButton.setBackground(new java.awt.Color(255, 153, 153));
        buyButton.setText("Restock Product");
        buyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyButtonActionPerformed(evt);
            }
        });

        sellButton.setBackground(new java.awt.Color(204, 255, 204));
        sellButton.setText("Sell Product");
        sellButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sellButtonActionPerformed(evt);
            }
        });

        jCheckBox1.setText("tick box to confirm selection");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Update Database");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addComponent(buyButton)
                        .addGap(27, 27, 27)
                        .addComponent(sellButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyButton)
                    .addComponent(sellButton)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("STOCK ITEMS", jPanel2);

        salesInfoTable.setBackground(new java.awt.Color(255, 255, 204));
        salesInfoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(salesInfoTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 742, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 59, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SALES TRANSACTIONS", jPanel3);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("BARKERS BOUTIQUE STOCK INVENTORY CONTROL");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sellButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sellButtonActionPerformed
        // sell button handling code 
        int selectedItem = itemsTable.getSelectedRow();

        if (selectedItem != -1) {
            BBStockItem item = items.get(selectedItem);

            //implement Observer a
            BB_Buying dept = new BB_Buying(item);

            int quantity = item.getQuantity();

            int quantityToSell = Integer.parseInt(JOptionPane.showInputDialog(BBStockItemGUI.this, "Enter Quantity", "Sell product", JOptionPane.INFORMATION_MESSAGE));
            int oldQuantity = quantity; // saves old quantity for display
            int newQuantity = quantity - quantityToSell; //calculates new quantity for stock
            
            
            item.setQuantity(newQuantity); //updates stock

            item.saleInfo(quantityToSell); //updates sales

            item.updateCSV(items);  //updates CSV
            itemsTable.updateUI();

            newInfo = BB_Stores.loadSalesInfoCSV();
            SalesTransactionsTableModel SalesInfoTableModel = new SalesTransactionsTableModel(newInfo);

            salesInfoTable.setModel(SalesInfoTableModel);
            if (newQuantity < 1) {
                JOptionPane.showMessageDialog(BBStockItemGUI.this, item.getProductCode() 
                        + " is ***OUT OF STOCK*** ==> QUANTITY REQUIRED IS GREATER THAN QUANTITY AVAILABLE \n Quantity available:  " 
                        + oldQuantity 
                        +  "\n Quantity Required:  " + quantityToSell 
                        + "\n Updated Quantity in Stock:  " + newQuantity 
                        + "\n\n >>> NEW SALES ORDERS TO PLACED ON BACKORDER (negative sign(-)) Kindly Restock ASAP <<< ");
            }
            else if (dept.display().equals("low stock")) {
                JOptionPane.showMessageDialog(BBStockItemGUI.this, item.getProductCode() + " **LOW STOCK!!**  Quantity Left: " 
                        + item.getQuantity() + "\n >>>Kindly Restock ASAP");               
            }
        } else {
            JOptionPane.showMessageDialog(BBStockItemGUI.this, "Kindly Select the product you want to sell");
        }
    }//GEN-LAST:event_sellButtonActionPerformed

    private void buyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyButtonActionPerformed
        // handling code:
        int selectedItem = itemsTable.getSelectedRow();

        if (selectedItem != -1) {
            BBStockItem item = items.get(selectedItem);

            int quantity = item.getQuantity();

            int totalQuantity = Integer.parseInt(JOptionPane.showInputDialog(BBStockItemGUI.this, "Enter Quantity", "Restock Product", JOptionPane.INFORMATION_MESSAGE));
            int newQuantity = totalQuantity + quantity;

            item.setQuantity(newQuantity);
            item.updateCSV(items);
            itemsTable.updateUI();
        } else {

            JOptionPane.showMessageDialog(BBStockItemGUI.this, "Kindly select an item to restock");
        }
    }//GEN-LAST:event_buyButtonActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
JButton updateButton = new JButton("Update CSV");
        Component item = jPanel2.add(updateButton);

updateButton.addActionListener((ActionEvent e) -> {
    BBStockItem.exportCSV(items);
    JOptionPane.showMessageDialog(null, "CSV file has been updated!");
});    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BBStockItemGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BBStockItemGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buyButton;
    private javax.swing.JTable itemsTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable salesInfoTable;
    private javax.swing.JButton sellButton;
    // End of variables declaration//GEN-END:variables
}
